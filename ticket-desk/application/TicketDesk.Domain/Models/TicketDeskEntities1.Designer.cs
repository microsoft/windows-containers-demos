//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("TicketDeskModel", "FK_TicketAttachments_Tickets", "Tickets", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TicketDesk.Domain.Models.Ticket), "TicketAttachments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TicketDesk.Domain.Models.TicketAttachment), true)]
[assembly: EdmRelationshipAttribute("TicketDeskModel", "FK_TicketComments_Tickets", "Tickets", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TicketDesk.Domain.Models.Ticket), "TicketComments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TicketDesk.Domain.Models.TicketComment), true)]
[assembly: EdmRelationshipAttribute("TicketDeskModel", "FK_TicketEventNotifications_TicketComments", "TicketComments", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TicketDesk.Domain.Models.TicketComment), "TicketEventNotifications", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TicketDesk.Domain.Models.TicketEventNotification), true)]
[assembly: EdmRelationshipAttribute("TicketDeskModel", "FK_TicketTags_Tickets", "Tickets", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TicketDesk.Domain.Models.Ticket), "TicketTags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TicketDesk.Domain.Models.TicketTag), true)]

#endregion

namespace TicketDesk.Domain.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TicketDeskEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TicketDeskEntities object using the connection string found in the 'TicketDeskEntities' section of the application configuration file.
        /// </summary>
        public TicketDeskEntities() : base("name=TicketDeskEntities", "TicketDeskEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TicketDeskEntities object.
        /// </summary>
        public TicketDeskEntities(string connectionString) : base(connectionString, "TicketDeskEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TicketDeskEntities object.
        /// </summary>
        public TicketDeskEntities(EntityConnection connection) : base(connection, "TicketDeskEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TicketAttachment> TicketAttachments
        {
            get
            {
                if ((_TicketAttachments == null))
                {
                    _TicketAttachments = base.CreateObjectSet<TicketAttachment>("TicketAttachments");
                }
                return _TicketAttachments;
            }
        }
        private ObjectSet<TicketAttachment> _TicketAttachments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TicketComment> TicketComments
        {
            get
            {
                if ((_TicketComments == null))
                {
                    _TicketComments = base.CreateObjectSet<TicketComment>("TicketComments");
                }
                return _TicketComments;
            }
        }
        private ObjectSet<TicketComment> _TicketComments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TicketEventNotification> TicketEventNotifications
        {
            get
            {
                if ((_TicketEventNotifications == null))
                {
                    _TicketEventNotifications = base.CreateObjectSet<TicketEventNotification>("TicketEventNotifications");
                }
                return _TicketEventNotifications;
            }
        }
        private ObjectSet<TicketEventNotification> _TicketEventNotifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ticket> Tickets
        {
            get
            {
                if ((_Tickets == null))
                {
                    _Tickets = base.CreateObjectSet<Ticket>("Tickets");
                }
                return _Tickets;
            }
        }
        private ObjectSet<Ticket> _Tickets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TicketTag> TicketTags
        {
            get
            {
                if ((_TicketTags == null))
                {
                    _TicketTags = base.CreateObjectSet<TicketTag>("TicketTags");
                }
                return _TicketTags;
            }
        }
        private ObjectSet<TicketTag> _TicketTags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdCachedRoleMember> AdCachedRoleMembers
        {
            get
            {
                if ((_AdCachedRoleMembers == null))
                {
                    _AdCachedRoleMembers = base.CreateObjectSet<AdCachedRoleMember>("AdCachedRoleMembers");
                }
                return _AdCachedRoleMembers;
            }
        }
        private ObjectSet<AdCachedRoleMember> _AdCachedRoleMembers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdCachedUserProperty> AdCachedUserProperties
        {
            get
            {
                if ((_AdCachedUserProperties == null))
                {
                    _AdCachedUserProperties = base.CreateObjectSet<AdCachedUserProperty>("AdCachedUserProperties");
                }
                return _AdCachedUserProperties;
            }
        }
        private ObjectSet<AdCachedUserProperty> _AdCachedUserProperties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Setting> Settings
        {
            get
            {
                if ((_Settings == null))
                {
                    _Settings = base.CreateObjectSet<Setting>("Settings");
                }
                return _Settings;
            }
        }
        private ObjectSet<Setting> _Settings;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TicketAttachments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTicketAttachments(TicketAttachment ticketAttachment)
        {
            base.AddObject("TicketAttachments", ticketAttachment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TicketComments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTicketComments(TicketComment ticketComment)
        {
            base.AddObject("TicketComments", ticketComment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TicketEventNotifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTicketEventNotifications(TicketEventNotification ticketEventNotification)
        {
            base.AddObject("TicketEventNotifications", ticketEventNotification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tickets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTickets(Ticket ticket)
        {
            base.AddObject("Tickets", ticket);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TicketTags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTicketTags(TicketTag ticketTag)
        {
            base.AddObject("TicketTags", ticketTag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdCachedRoleMembers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdCachedRoleMembers(AdCachedRoleMember adCachedRoleMember)
        {
            base.AddObject("AdCachedRoleMembers", adCachedRoleMember);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdCachedUserProperties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdCachedUserProperties(AdCachedUserProperty adCachedUserProperty)
        {
            base.AddObject("AdCachedUserProperties", adCachedUserProperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Settings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSettings(Setting setting)
        {
            base.AddObject("Settings", setting);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TicketDeskModel", Name="AdCachedRoleMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdCachedRoleMember : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdCachedRoleMember object.
        /// </summary>
        /// <param name="groupName">Initial value of the GroupName property.</param>
        /// <param name="memberName">Initial value of the MemberName property.</param>
        /// <param name="memberDisplayName">Initial value of the MemberDisplayName property.</param>
        public static AdCachedRoleMember CreateAdCachedRoleMember(global::System.String groupName, global::System.String memberName, global::System.String memberDisplayName)
        {
            AdCachedRoleMember adCachedRoleMember = new AdCachedRoleMember();
            adCachedRoleMember.GroupName = groupName;
            adCachedRoleMember.MemberName = memberName;
            adCachedRoleMember.MemberDisplayName = memberDisplayName;
            return adCachedRoleMember;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                if (_GroupName != value)
                {
                    OnGroupNameChanging(value);
                    ReportPropertyChanging("GroupName");
                    _GroupName = StructuralObject.SetValidValue(value, false, "GroupName");
                    ReportPropertyChanged("GroupName");
                    OnGroupNameChanged();
                }
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MemberName
        {
            get
            {
                return _MemberName;
            }
            set
            {
                if (_MemberName != value)
                {
                    OnMemberNameChanging(value);
                    ReportPropertyChanging("MemberName");
                    _MemberName = StructuralObject.SetValidValue(value, false, "MemberName");
                    ReportPropertyChanged("MemberName");
                    OnMemberNameChanged();
                }
            }
        }
        private global::System.String _MemberName;
        partial void OnMemberNameChanging(global::System.String value);
        partial void OnMemberNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MemberDisplayName
        {
            get
            {
                return _MemberDisplayName;
            }
            set
            {
                OnMemberDisplayNameChanging(value);
                ReportPropertyChanging("MemberDisplayName");
                _MemberDisplayName = StructuralObject.SetValidValue(value, false, "MemberDisplayName");
                ReportPropertyChanged("MemberDisplayName");
                OnMemberDisplayNameChanged();
            }
        }
        private global::System.String _MemberDisplayName;
        partial void OnMemberDisplayNameChanging(global::System.String value);
        partial void OnMemberDisplayNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TicketDeskModel", Name="AdCachedUserProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdCachedUserProperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdCachedUserProperty object.
        /// </summary>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="propertyName">Initial value of the PropertyName property.</param>
        /// <param name="isActiveInAd">Initial value of the IsActiveInAd property.</param>
        public static AdCachedUserProperty CreateAdCachedUserProperty(global::System.String userName, global::System.String propertyName, global::System.Boolean isActiveInAd)
        {
            AdCachedUserProperty adCachedUserProperty = new AdCachedUserProperty();
            adCachedUserProperty.UserName = userName;
            adCachedUserProperty.PropertyName = propertyName;
            adCachedUserProperty.IsActiveInAd = isActiveInAd;
            return adCachedUserProperty;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyName
        {
            get
            {
                return _PropertyName;
            }
            set
            {
                if (_PropertyName != value)
                {
                    OnPropertyNameChanging(value);
                    ReportPropertyChanging("PropertyName");
                    _PropertyName = StructuralObject.SetValidValue(value, false, "PropertyName");
                    ReportPropertyChanged("PropertyName");
                    OnPropertyNameChanged();
                }
            }
        }
        private global::System.String _PropertyName;
        partial void OnPropertyNameChanging(global::System.String value);
        partial void OnPropertyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyValue
        {
            get
            {
                return _PropertyValue;
            }
            set
            {
                OnPropertyValueChanging(value);
                ReportPropertyChanging("PropertyValue");
                _PropertyValue = StructuralObject.SetValidValue(value, true, "PropertyValue");
                ReportPropertyChanged("PropertyValue");
                OnPropertyValueChanged();
            }
        }
        private global::System.String _PropertyValue;
        partial void OnPropertyValueChanging(global::System.String value);
        partial void OnPropertyValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastRefreshed
        {
            get
            {
                return _LastRefreshed;
            }
            set
            {
                OnLastRefreshedChanging(value);
                ReportPropertyChanging("LastRefreshed");
                _LastRefreshed = StructuralObject.SetValidValue(value, "LastRefreshed");
                ReportPropertyChanged("LastRefreshed");
                OnLastRefreshedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastRefreshed;
        partial void OnLastRefreshedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastRefreshedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActiveInAd
        {
            get
            {
                return _IsActiveInAd;
            }
            set
            {
                OnIsActiveInAdChanging(value);
                ReportPropertyChanging("IsActiveInAd");
                _IsActiveInAd = StructuralObject.SetValidValue(value, "IsActiveInAd");
                ReportPropertyChanged("IsActiveInAd");
                OnIsActiveInAdChanged();
            }
        }
        private global::System.Boolean _IsActiveInAd;
        partial void OnIsActiveInAdChanging(global::System.Boolean value);
        partial void OnIsActiveInAdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TicketDeskModel", Name="Setting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Setting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Setting object.
        /// </summary>
        /// <param name="settingName">Initial value of the SettingName property.</param>
        /// <param name="settingType">Initial value of the SettingType property.</param>
        public static Setting CreateSetting(global::System.String settingName, global::System.String settingType)
        {
            Setting setting = new Setting();
            setting.SettingName = settingName;
            setting.SettingType = settingType;
            return setting;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SettingName
        {
            get
            {
                return _SettingName;
            }
            set
            {
                if (_SettingName != value)
                {
                    OnSettingNameChanging(value);
                    ReportPropertyChanging("SettingName");
                    _SettingName = StructuralObject.SetValidValue(value, false, "SettingName");
                    ReportPropertyChanged("SettingName");
                    OnSettingNameChanged();
                }
            }
        }
        private global::System.String _SettingName;
        partial void OnSettingNameChanging(global::System.String value);
        partial void OnSettingNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SettingValue
        {
            get
            {
                return _SettingValue;
            }
            set
            {
                OnSettingValueChanging(value);
                ReportPropertyChanging("SettingValue");
                _SettingValue = StructuralObject.SetValidValue(value, true, "SettingValue");
                ReportPropertyChanged("SettingValue");
                OnSettingValueChanged();
            }
        }
        private global::System.String _SettingValue;
        partial void OnSettingValueChanging(global::System.String value);
        partial void OnSettingValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DefaultValue
        {
            get
            {
                return _DefaultValue;
            }
            set
            {
                OnDefaultValueChanging(value);
                ReportPropertyChanging("DefaultValue");
                _DefaultValue = StructuralObject.SetValidValue(value, true, "DefaultValue");
                ReportPropertyChanged("DefaultValue");
                OnDefaultValueChanged();
            }
        }
        private global::System.String _DefaultValue;
        partial void OnDefaultValueChanging(global::System.String value);
        partial void OnDefaultValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SettingType
        {
            get
            {
                return _SettingType;
            }
            set
            {
                OnSettingTypeChanging(value);
                ReportPropertyChanging("SettingType");
                _SettingType = StructuralObject.SetValidValue(value, false, "SettingType");
                ReportPropertyChanged("SettingType");
                OnSettingTypeChanged();
            }
        }
        private global::System.String _SettingType;
        partial void OnSettingTypeChanging(global::System.String value);
        partial void OnSettingTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SettingDescription
        {
            get
            {
                return _SettingDescription;
            }
            set
            {
                OnSettingDescriptionChanging(value);
                ReportPropertyChanging("SettingDescription");
                _SettingDescription = StructuralObject.SetValidValue(value, true, "SettingDescription");
                ReportPropertyChanged("SettingDescription");
                OnSettingDescriptionChanged();
            }
        }
        private global::System.String _SettingDescription;
        partial void OnSettingDescriptionChanging(global::System.String value);
        partial void OnSettingDescriptionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TicketDeskModel", Name="Ticket")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ticket : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ticket object.
        /// </summary>
        /// <param name="ticketId">Initial value of the TicketId property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="details">Initial value of the Details property.</param>
        /// <param name="isHtml">Initial value of the IsHtml property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="owner">Initial value of the Owner property.</param>
        /// <param name="currentStatus">Initial value of the CurrentStatus property.</param>
        /// <param name="currentStatusDate">Initial value of the CurrentStatusDate property.</param>
        /// <param name="currentStatusSetBy">Initial value of the CurrentStatusSetBy property.</param>
        /// <param name="lastUpdateBy">Initial value of the LastUpdateBy property.</param>
        /// <param name="lastUpdateDate">Initial value of the LastUpdateDate property.</param>
        /// <param name="affectsCustomer">Initial value of the AffectsCustomer property.</param>
        /// <param name="publishedToKb">Initial value of the PublishedToKb property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static Ticket CreateTicket(global::System.Int32 ticketId, global::System.String type, global::System.String category, global::System.String title, global::System.String details, global::System.Boolean isHtml, global::System.String createdBy, global::System.DateTime createdDate, global::System.String owner, global::System.String currentStatus, global::System.DateTime currentStatusDate, global::System.String currentStatusSetBy, global::System.String lastUpdateBy, global::System.DateTime lastUpdateDate, global::System.Boolean affectsCustomer, global::System.Boolean publishedToKb, global::System.Byte[] version)
        {
            Ticket ticket = new Ticket();
            ticket.TicketId = ticketId;
            ticket.Type = type;
            ticket.Category = category;
            ticket.Title = title;
            ticket.Details = details;
            ticket.IsHtml = isHtml;
            ticket.CreatedBy = createdBy;
            ticket.CreatedDate = createdDate;
            ticket.Owner = owner;
            ticket.CurrentStatus = currentStatus;
            ticket.CurrentStatusDate = currentStatusDate;
            ticket.CurrentStatusSetBy = currentStatusSetBy;
            ticket.LastUpdateBy = lastUpdateBy;
            ticket.LastUpdateDate = lastUpdateDate;
            ticket.AffectsCustomer = affectsCustomer;
            ticket.PublishedToKb = publishedToKb;
            ticket.Version = version;
            return ticket;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TicketId
        {
            get
            {
                return _TicketId;
            }
            set
            {
                if (_TicketId != value)
                {
                    OnTicketIdChanging(value);
                    ReportPropertyChanging("TicketId");
                    _TicketId = StructuralObject.SetValidValue(value, "TicketId");
                    ReportPropertyChanged("TicketId");
                    OnTicketIdChanged();
                }
            }
        }
        private global::System.Int32 _TicketId;
        partial void OnTicketIdChanging(global::System.Int32 value);
        partial void OnTicketIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, false, "Category");
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, false, "Details");
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsHtml
        {
            get
            {
                return _IsHtml;
            }
            set
            {
                OnIsHtmlChanging(value);
                ReportPropertyChanging("IsHtml");
                _IsHtml = StructuralObject.SetValidValue(value, "IsHtml");
                ReportPropertyChanged("IsHtml");
                OnIsHtmlChanged();
            }
        }
        private global::System.Boolean _IsHtml;
        partial void OnIsHtmlChanging(global::System.Boolean value);
        partial void OnIsHtmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TagList
        {
            get
            {
                return _TagList;
            }
            set
            {
                OnTagListChanging(value);
                ReportPropertyChanging("TagList");
                _TagList = StructuralObject.SetValidValue(value, true, "TagList");
                ReportPropertyChanged("TagList");
                OnTagListChanged();
            }
        }
        private global::System.String _TagList;
        partial void OnTagListChanging(global::System.String value);
        partial void OnTagListChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, false, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value, false, "Owner");
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.String _Owner;
        partial void OnOwnerChanging(global::System.String value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssignedTo
        {
            get
            {
                return _AssignedTo;
            }
            set
            {
                OnAssignedToChanging(value);
                ReportPropertyChanging("AssignedTo");
                _AssignedTo = StructuralObject.SetValidValue(value, true, "AssignedTo");
                ReportPropertyChanged("AssignedTo");
                OnAssignedToChanged();
            }
        }
        private global::System.String _AssignedTo;
        partial void OnAssignedToChanging(global::System.String value);
        partial void OnAssignedToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrentStatus
        {
            get
            {
                return _CurrentStatus;
            }
            set
            {
                OnCurrentStatusChanging(value);
                ReportPropertyChanging("CurrentStatus");
                _CurrentStatus = StructuralObject.SetValidValue(value, false, "CurrentStatus");
                ReportPropertyChanged("CurrentStatus");
                OnCurrentStatusChanged();
            }
        }
        private global::System.String _CurrentStatus;
        partial void OnCurrentStatusChanging(global::System.String value);
        partial void OnCurrentStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CurrentStatusDate
        {
            get
            {
                return _CurrentStatusDate;
            }
            set
            {
                OnCurrentStatusDateChanging(value);
                ReportPropertyChanging("CurrentStatusDate");
                _CurrentStatusDate = StructuralObject.SetValidValue(value, "CurrentStatusDate");
                ReportPropertyChanged("CurrentStatusDate");
                OnCurrentStatusDateChanged();
            }
        }
        private global::System.DateTime _CurrentStatusDate;
        partial void OnCurrentStatusDateChanging(global::System.DateTime value);
        partial void OnCurrentStatusDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrentStatusSetBy
        {
            get
            {
                return _CurrentStatusSetBy;
            }
            set
            {
                OnCurrentStatusSetByChanging(value);
                ReportPropertyChanging("CurrentStatusSetBy");
                _CurrentStatusSetBy = StructuralObject.SetValidValue(value, false, "CurrentStatusSetBy");
                ReportPropertyChanged("CurrentStatusSetBy");
                OnCurrentStatusSetByChanged();
            }
        }
        private global::System.String _CurrentStatusSetBy;
        partial void OnCurrentStatusSetByChanging(global::System.String value);
        partial void OnCurrentStatusSetByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastUpdateBy
        {
            get
            {
                return _LastUpdateBy;
            }
            set
            {
                OnLastUpdateByChanging(value);
                ReportPropertyChanging("LastUpdateBy");
                _LastUpdateBy = StructuralObject.SetValidValue(value, false, "LastUpdateBy");
                ReportPropertyChanged("LastUpdateBy");
                OnLastUpdateByChanged();
            }
        }
        private global::System.String _LastUpdateBy;
        partial void OnLastUpdateByChanging(global::System.String value);
        partial void OnLastUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateDate
        {
            get
            {
                return _LastUpdateDate;
            }
            set
            {
                OnLastUpdateDateChanging(value);
                ReportPropertyChanging("LastUpdateDate");
                _LastUpdateDate = StructuralObject.SetValidValue(value, "LastUpdateDate");
                ReportPropertyChanged("LastUpdateDate");
                OnLastUpdateDateChanged();
            }
        }
        private global::System.DateTime _LastUpdateDate;
        partial void OnLastUpdateDateChanging(global::System.DateTime value);
        partial void OnLastUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value, true, "Priority");
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.String _Priority;
        partial void OnPriorityChanging(global::System.String value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AffectsCustomer
        {
            get
            {
                return _AffectsCustomer;
            }
            set
            {
                OnAffectsCustomerChanging(value);
                ReportPropertyChanging("AffectsCustomer");
                _AffectsCustomer = StructuralObject.SetValidValue(value, "AffectsCustomer");
                ReportPropertyChanged("AffectsCustomer");
                OnAffectsCustomerChanged();
            }
        }
        private global::System.Boolean _AffectsCustomer;
        partial void OnAffectsCustomerChanging(global::System.Boolean value);
        partial void OnAffectsCustomerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PublishedToKb
        {
            get
            {
                return _PublishedToKb;
            }
            set
            {
                OnPublishedToKbChanging(value);
                ReportPropertyChanging("PublishedToKb");
                _PublishedToKb = StructuralObject.SetValidValue(value, "PublishedToKb");
                ReportPropertyChanged("PublishedToKb");
                OnPublishedToKbChanged();
            }
        }
        private global::System.Boolean _PublishedToKb;
        partial void OnPublishedToKbChanging(global::System.Boolean value);
        partial void OnPublishedToKbChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Version
        {
            get
            {
                return StructuralObject.GetValidValue(_Version);
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Byte[] _Version;
        partial void OnVersionChanging(global::System.Byte[] value);
        partial void OnVersionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TicketDeskModel", "FK_TicketAttachments_Tickets", "TicketAttachments")]
        public EntityCollection<TicketAttachment> TicketAttachments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TicketAttachment>("TicketDeskModel.FK_TicketAttachments_Tickets", "TicketAttachments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TicketAttachment>("TicketDeskModel.FK_TicketAttachments_Tickets", "TicketAttachments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TicketDeskModel", "FK_TicketComments_Tickets", "TicketComments")]
        public EntityCollection<TicketComment> TicketComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TicketComment>("TicketDeskModel.FK_TicketComments_Tickets", "TicketComments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TicketComment>("TicketDeskModel.FK_TicketComments_Tickets", "TicketComments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TicketDeskModel", "FK_TicketTags_Tickets", "TicketTags")]
        public EntityCollection<TicketTag> TicketTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TicketTag>("TicketDeskModel.FK_TicketTags_Tickets", "TicketTags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TicketTag>("TicketDeskModel.FK_TicketTags_Tickets", "TicketTags", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TicketDeskModel", Name="TicketAttachment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TicketAttachment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TicketAttachment object.
        /// </summary>
        /// <param name="fileId">Initial value of the FileId property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="fileSize">Initial value of the FileSize property.</param>
        /// <param name="fileType">Initial value of the FileType property.</param>
        /// <param name="uploadedBy">Initial value of the UploadedBy property.</param>
        /// <param name="uploadedDate">Initial value of the UploadedDate property.</param>
        /// <param name="fileContents">Initial value of the FileContents property.</param>
        /// <param name="isPending">Initial value of the IsPending property.</param>
        public static TicketAttachment CreateTicketAttachment(global::System.Int32 fileId, global::System.String fileName, global::System.Int32 fileSize, global::System.String fileType, global::System.String uploadedBy, global::System.DateTime uploadedDate, global::System.Byte[] fileContents, global::System.Boolean isPending)
        {
            TicketAttachment ticketAttachment = new TicketAttachment();
            ticketAttachment.FileId = fileId;
            ticketAttachment.FileName = fileName;
            ticketAttachment.FileSize = fileSize;
            ticketAttachment.FileType = fileType;
            ticketAttachment.UploadedBy = uploadedBy;
            ticketAttachment.UploadedDate = uploadedDate;
            ticketAttachment.FileContents = fileContents;
            ticketAttachment.IsPending = isPending;
            return ticketAttachment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TicketId
        {
            get
            {
                return _TicketId;
            }
            set
            {
                OnTicketIdChanging(value);
                ReportPropertyChanging("TicketId");
                _TicketId = StructuralObject.SetValidValue(value, "TicketId");
                ReportPropertyChanged("TicketId");
                OnTicketIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TicketId;
        partial void OnTicketIdChanging(Nullable<global::System.Int32> value);
        partial void OnTicketIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileId
        {
            get
            {
                return _FileId;
            }
            set
            {
                if (_FileId != value)
                {
                    OnFileIdChanging(value);
                    ReportPropertyChanging("FileId");
                    _FileId = StructuralObject.SetValidValue(value, "FileId");
                    ReportPropertyChanged("FileId");
                    OnFileIdChanged();
                }
            }
        }
        private global::System.Int32 _FileId;
        partial void OnFileIdChanging(global::System.Int32 value);
        partial void OnFileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false, "FileName");
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileSize
        {
            get
            {
                return _FileSize;
            }
            set
            {
                OnFileSizeChanging(value);
                ReportPropertyChanging("FileSize");
                _FileSize = StructuralObject.SetValidValue(value, "FileSize");
                ReportPropertyChanged("FileSize");
                OnFileSizeChanged();
            }
        }
        private global::System.Int32 _FileSize;
        partial void OnFileSizeChanging(global::System.Int32 value);
        partial void OnFileSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileType
        {
            get
            {
                return _FileType;
            }
            set
            {
                OnFileTypeChanging(value);
                ReportPropertyChanging("FileType");
                _FileType = StructuralObject.SetValidValue(value, false, "FileType");
                ReportPropertyChanged("FileType");
                OnFileTypeChanged();
            }
        }
        private global::System.String _FileType;
        partial void OnFileTypeChanging(global::System.String value);
        partial void OnFileTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UploadedBy
        {
            get
            {
                return _UploadedBy;
            }
            set
            {
                OnUploadedByChanging(value);
                ReportPropertyChanging("UploadedBy");
                _UploadedBy = StructuralObject.SetValidValue(value, false, "UploadedBy");
                ReportPropertyChanged("UploadedBy");
                OnUploadedByChanged();
            }
        }
        private global::System.String _UploadedBy;
        partial void OnUploadedByChanging(global::System.String value);
        partial void OnUploadedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UploadedDate
        {
            get
            {
                return _UploadedDate;
            }
            set
            {
                OnUploadedDateChanging(value);
                ReportPropertyChanging("UploadedDate");
                _UploadedDate = StructuralObject.SetValidValue(value, "UploadedDate");
                ReportPropertyChanged("UploadedDate");
                OnUploadedDateChanged();
            }
        }
        private global::System.DateTime _UploadedDate;
        partial void OnUploadedDateChanging(global::System.DateTime value);
        partial void OnUploadedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] FileContents
        {
            get
            {
                return StructuralObject.GetValidValue(_FileContents);
            }
            set
            {
                OnFileContentsChanging(value);
                ReportPropertyChanging("FileContents");
                _FileContents = StructuralObject.SetValidValue(value, false, "FileContents");
                ReportPropertyChanged("FileContents");
                OnFileContentsChanged();
            }
        }
        private global::System.Byte[] _FileContents;
        partial void OnFileContentsChanging(global::System.Byte[] value);
        partial void OnFileContentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileDescription
        {
            get
            {
                return _FileDescription;
            }
            set
            {
                OnFileDescriptionChanging(value);
                ReportPropertyChanging("FileDescription");
                _FileDescription = StructuralObject.SetValidValue(value, true, "FileDescription");
                ReportPropertyChanged("FileDescription");
                OnFileDescriptionChanged();
            }
        }
        private global::System.String _FileDescription;
        partial void OnFileDescriptionChanging(global::System.String value);
        partial void OnFileDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPending
        {
            get
            {
                return _IsPending;
            }
            set
            {
                OnIsPendingChanging(value);
                ReportPropertyChanging("IsPending");
                _IsPending = StructuralObject.SetValidValue(value, "IsPending");
                ReportPropertyChanged("IsPending");
                OnIsPendingChanged();
            }
        }
        private global::System.Boolean _IsPending;
        partial void OnIsPendingChanging(global::System.Boolean value);
        partial void OnIsPendingChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TicketDeskModel", "FK_TicketAttachments_Tickets", "Tickets")]
        public Ticket Ticket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("TicketDeskModel.FK_TicketAttachments_Tickets", "Tickets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("TicketDeskModel.FK_TicketAttachments_Tickets", "Tickets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ticket> TicketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("TicketDeskModel.FK_TicketAttachments_Tickets", "Tickets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ticket>("TicketDeskModel.FK_TicketAttachments_Tickets", "Tickets", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TicketDeskModel", Name="TicketComment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TicketComment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TicketComment object.
        /// </summary>
        /// <param name="ticketId">Initial value of the TicketId property.</param>
        /// <param name="commentId">Initial value of the CommentId property.</param>
        /// <param name="isHtml">Initial value of the IsHtml property.</param>
        /// <param name="commentedBy">Initial value of the CommentedBy property.</param>
        /// <param name="commentedDate">Initial value of the CommentedDate property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static TicketComment CreateTicketComment(global::System.Int32 ticketId, global::System.Int32 commentId, global::System.Boolean isHtml, global::System.String commentedBy, global::System.DateTime commentedDate, global::System.Byte[] version)
        {
            TicketComment ticketComment = new TicketComment();
            ticketComment.TicketId = ticketId;
            ticketComment.CommentId = commentId;
            ticketComment.IsHtml = isHtml;
            ticketComment.CommentedBy = commentedBy;
            ticketComment.CommentedDate = commentedDate;
            ticketComment.Version = version;
            return ticketComment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TicketId
        {
            get
            {
                return _TicketId;
            }
            set
            {
                if (_TicketId != value)
                {
                    OnTicketIdChanging(value);
                    ReportPropertyChanging("TicketId");
                    _TicketId = StructuralObject.SetValidValue(value, "TicketId");
                    ReportPropertyChanged("TicketId");
                    OnTicketIdChanged();
                }
            }
        }
        private global::System.Int32 _TicketId;
        partial void OnTicketIdChanging(global::System.Int32 value);
        partial void OnTicketIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommentId
        {
            get
            {
                return _CommentId;
            }
            set
            {
                if (_CommentId != value)
                {
                    OnCommentIdChanging(value);
                    ReportPropertyChanging("CommentId");
                    _CommentId = StructuralObject.SetValidValue(value, "CommentId");
                    ReportPropertyChanged("CommentId");
                    OnCommentIdChanged();
                }
            }
        }
        private global::System.Int32 _CommentId;
        partial void OnCommentIdChanging(global::System.Int32 value);
        partial void OnCommentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CommentEvent
        {
            get
            {
                return _CommentEvent;
            }
            set
            {
                OnCommentEventChanging(value);
                ReportPropertyChanging("CommentEvent");
                _CommentEvent = StructuralObject.SetValidValue(value, true, "CommentEvent");
                ReportPropertyChanged("CommentEvent");
                OnCommentEventChanged();
            }
        }
        private global::System.String _CommentEvent;
        partial void OnCommentEventChanging(global::System.String value);
        partial void OnCommentEventChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true, "Comment");
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsHtml
        {
            get
            {
                return _IsHtml;
            }
            set
            {
                OnIsHtmlChanging(value);
                ReportPropertyChanging("IsHtml");
                _IsHtml = StructuralObject.SetValidValue(value, "IsHtml");
                ReportPropertyChanged("IsHtml");
                OnIsHtmlChanged();
            }
        }
        private global::System.Boolean _IsHtml;
        partial void OnIsHtmlChanging(global::System.Boolean value);
        partial void OnIsHtmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommentedBy
        {
            get
            {
                return _CommentedBy;
            }
            set
            {
                OnCommentedByChanging(value);
                ReportPropertyChanging("CommentedBy");
                _CommentedBy = StructuralObject.SetValidValue(value, false, "CommentedBy");
                ReportPropertyChanged("CommentedBy");
                OnCommentedByChanged();
            }
        }
        private global::System.String _CommentedBy;
        partial void OnCommentedByChanging(global::System.String value);
        partial void OnCommentedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CommentedDate
        {
            get
            {
                return _CommentedDate;
            }
            set
            {
                OnCommentedDateChanging(value);
                ReportPropertyChanging("CommentedDate");
                _CommentedDate = StructuralObject.SetValidValue(value, "CommentedDate");
                ReportPropertyChanged("CommentedDate");
                OnCommentedDateChanged();
            }
        }
        private global::System.DateTime _CommentedDate;
        partial void OnCommentedDateChanging(global::System.DateTime value);
        partial void OnCommentedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Version
        {
            get
            {
                return StructuralObject.GetValidValue(_Version);
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Byte[] _Version;
        partial void OnVersionChanging(global::System.Byte[] value);
        partial void OnVersionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TicketDeskModel", "FK_TicketComments_Tickets", "Tickets")]
        public Ticket Ticket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("TicketDeskModel.FK_TicketComments_Tickets", "Tickets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("TicketDeskModel.FK_TicketComments_Tickets", "Tickets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ticket> TicketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("TicketDeskModel.FK_TicketComments_Tickets", "Tickets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ticket>("TicketDeskModel.FK_TicketComments_Tickets", "Tickets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TicketDeskModel", "FK_TicketEventNotifications_TicketComments", "TicketEventNotifications")]
        public EntityCollection<TicketEventNotification> TicketEventNotifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TicketEventNotification>("TicketDeskModel.FK_TicketEventNotifications_TicketComments", "TicketEventNotifications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TicketEventNotification>("TicketDeskModel.FK_TicketEventNotifications_TicketComments", "TicketEventNotifications", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TicketDeskModel", Name="TicketEventNotification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TicketEventNotification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TicketEventNotification object.
        /// </summary>
        /// <param name="ticketId">Initial value of the TicketId property.</param>
        /// <param name="commentId">Initial value of the CommentId property.</param>
        /// <param name="notifyUser">Initial value of the NotifyUser property.</param>
        /// <param name="notifyUserDisplayName">Initial value of the NotifyUserDisplayName property.</param>
        /// <param name="notifyEmail">Initial value of the NotifyEmail property.</param>
        /// <param name="notifyUserReason">Initial value of the NotifyUserReason property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="deliveryAttempts">Initial value of the DeliveryAttempts property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="eventGeneratedByUser">Initial value of the EventGeneratedByUser property.</param>
        public static TicketEventNotification CreateTicketEventNotification(global::System.Int32 ticketId, global::System.Int32 commentId, global::System.String notifyUser, global::System.String notifyUserDisplayName, global::System.String notifyEmail, global::System.String notifyUserReason, global::System.DateTime createdDate, global::System.Int32 deliveryAttempts, global::System.String status, global::System.String eventGeneratedByUser)
        {
            TicketEventNotification ticketEventNotification = new TicketEventNotification();
            ticketEventNotification.TicketId = ticketId;
            ticketEventNotification.CommentId = commentId;
            ticketEventNotification.NotifyUser = notifyUser;
            ticketEventNotification.NotifyUserDisplayName = notifyUserDisplayName;
            ticketEventNotification.NotifyEmail = notifyEmail;
            ticketEventNotification.NotifyUserReason = notifyUserReason;
            ticketEventNotification.CreatedDate = createdDate;
            ticketEventNotification.DeliveryAttempts = deliveryAttempts;
            ticketEventNotification.Status = status;
            ticketEventNotification.EventGeneratedByUser = eventGeneratedByUser;
            return ticketEventNotification;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TicketId
        {
            get
            {
                return _TicketId;
            }
            set
            {
                if (_TicketId != value)
                {
                    OnTicketIdChanging(value);
                    ReportPropertyChanging("TicketId");
                    _TicketId = StructuralObject.SetValidValue(value, "TicketId");
                    ReportPropertyChanged("TicketId");
                    OnTicketIdChanged();
                }
            }
        }
        private global::System.Int32 _TicketId;
        partial void OnTicketIdChanging(global::System.Int32 value);
        partial void OnTicketIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommentId
        {
            get
            {
                return _CommentId;
            }
            set
            {
                if (_CommentId != value)
                {
                    OnCommentIdChanging(value);
                    ReportPropertyChanging("CommentId");
                    _CommentId = StructuralObject.SetValidValue(value, "CommentId");
                    ReportPropertyChanged("CommentId");
                    OnCommentIdChanged();
                }
            }
        }
        private global::System.Int32 _CommentId;
        partial void OnCommentIdChanging(global::System.Int32 value);
        partial void OnCommentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NotifyUser
        {
            get
            {
                return _NotifyUser;
            }
            set
            {
                if (_NotifyUser != value)
                {
                    OnNotifyUserChanging(value);
                    ReportPropertyChanging("NotifyUser");
                    _NotifyUser = StructuralObject.SetValidValue(value, false, "NotifyUser");
                    ReportPropertyChanged("NotifyUser");
                    OnNotifyUserChanged();
                }
            }
        }
        private global::System.String _NotifyUser;
        partial void OnNotifyUserChanging(global::System.String value);
        partial void OnNotifyUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NotifyUserDisplayName
        {
            get
            {
                return _NotifyUserDisplayName;
            }
            set
            {
                OnNotifyUserDisplayNameChanging(value);
                ReportPropertyChanging("NotifyUserDisplayName");
                _NotifyUserDisplayName = StructuralObject.SetValidValue(value, false, "NotifyUserDisplayName");
                ReportPropertyChanged("NotifyUserDisplayName");
                OnNotifyUserDisplayNameChanged();
            }
        }
        private global::System.String _NotifyUserDisplayName;
        partial void OnNotifyUserDisplayNameChanging(global::System.String value);
        partial void OnNotifyUserDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NotifyEmail
        {
            get
            {
                return _NotifyEmail;
            }
            set
            {
                OnNotifyEmailChanging(value);
                ReportPropertyChanging("NotifyEmail");
                _NotifyEmail = StructuralObject.SetValidValue(value, false, "NotifyEmail");
                ReportPropertyChanged("NotifyEmail");
                OnNotifyEmailChanged();
            }
        }
        private global::System.String _NotifyEmail;
        partial void OnNotifyEmailChanging(global::System.String value);
        partial void OnNotifyEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NotifyUserReason
        {
            get
            {
                return _NotifyUserReason;
            }
            set
            {
                OnNotifyUserReasonChanging(value);
                ReportPropertyChanging("NotifyUserReason");
                _NotifyUserReason = StructuralObject.SetValidValue(value, false, "NotifyUserReason");
                ReportPropertyChanged("NotifyUserReason");
                OnNotifyUserReasonChanged();
            }
        }
        private global::System.String _NotifyUserReason;
        partial void OnNotifyUserReasonChanging(global::System.String value);
        partial void OnNotifyUserReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeliveryAttempts
        {
            get
            {
                return _DeliveryAttempts;
            }
            set
            {
                OnDeliveryAttemptsChanging(value);
                ReportPropertyChanging("DeliveryAttempts");
                _DeliveryAttempts = StructuralObject.SetValidValue(value, "DeliveryAttempts");
                ReportPropertyChanged("DeliveryAttempts");
                OnDeliveryAttemptsChanged();
            }
        }
        private global::System.Int32 _DeliveryAttempts;
        partial void OnDeliveryAttemptsChanging(global::System.Int32 value);
        partial void OnDeliveryAttemptsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastDeliveryAttemptDate
        {
            get
            {
                return _LastDeliveryAttemptDate;
            }
            set
            {
                OnLastDeliveryAttemptDateChanging(value);
                ReportPropertyChanging("LastDeliveryAttemptDate");
                _LastDeliveryAttemptDate = StructuralObject.SetValidValue(value, "LastDeliveryAttemptDate");
                ReportPropertyChanged("LastDeliveryAttemptDate");
                OnLastDeliveryAttemptDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastDeliveryAttemptDate;
        partial void OnLastDeliveryAttemptDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastDeliveryAttemptDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NextDeliveryAttemptDate
        {
            get
            {
                return _NextDeliveryAttemptDate;
            }
            set
            {
                OnNextDeliveryAttemptDateChanging(value);
                ReportPropertyChanging("NextDeliveryAttemptDate");
                _NextDeliveryAttemptDate = StructuralObject.SetValidValue(value, "NextDeliveryAttemptDate");
                ReportPropertyChanged("NextDeliveryAttemptDate");
                OnNextDeliveryAttemptDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NextDeliveryAttemptDate;
        partial void OnNextDeliveryAttemptDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNextDeliveryAttemptDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventGeneratedByUser
        {
            get
            {
                return _EventGeneratedByUser;
            }
            set
            {
                OnEventGeneratedByUserChanging(value);
                ReportPropertyChanging("EventGeneratedByUser");
                _EventGeneratedByUser = StructuralObject.SetValidValue(value, false, "EventGeneratedByUser");
                ReportPropertyChanged("EventGeneratedByUser");
                OnEventGeneratedByUserChanged();
            }
        }
        private global::System.String _EventGeneratedByUser;
        partial void OnEventGeneratedByUserChanging(global::System.String value);
        partial void OnEventGeneratedByUserChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TicketDeskModel", "FK_TicketEventNotifications_TicketComments", "TicketComments")]
        public TicketComment TicketComment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketComment>("TicketDeskModel.FK_TicketEventNotifications_TicketComments", "TicketComments").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketComment>("TicketDeskModel.FK_TicketEventNotifications_TicketComments", "TicketComments").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TicketComment> TicketCommentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketComment>("TicketDeskModel.FK_TicketEventNotifications_TicketComments", "TicketComments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TicketComment>("TicketDeskModel.FK_TicketEventNotifications_TicketComments", "TicketComments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TicketDeskModel", Name="TicketTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TicketTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TicketTag object.
        /// </summary>
        /// <param name="ticketTagId">Initial value of the TicketTagId property.</param>
        /// <param name="tagName">Initial value of the TagName property.</param>
        /// <param name="ticketId">Initial value of the TicketId property.</param>
        public static TicketTag CreateTicketTag(global::System.Int32 ticketTagId, global::System.String tagName, global::System.Int32 ticketId)
        {
            TicketTag ticketTag = new TicketTag();
            ticketTag.TicketTagId = ticketTagId;
            ticketTag.TagName = tagName;
            ticketTag.TicketId = ticketId;
            return ticketTag;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TicketTagId
        {
            get
            {
                return _TicketTagId;
            }
            set
            {
                if (_TicketTagId != value)
                {
                    OnTicketTagIdChanging(value);
                    ReportPropertyChanging("TicketTagId");
                    _TicketTagId = StructuralObject.SetValidValue(value, "TicketTagId");
                    ReportPropertyChanged("TicketTagId");
                    OnTicketTagIdChanged();
                }
            }
        }
        private global::System.Int32 _TicketTagId;
        partial void OnTicketTagIdChanging(global::System.Int32 value);
        partial void OnTicketTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagName
        {
            get
            {
                return _TagName;
            }
            set
            {
                OnTagNameChanging(value);
                ReportPropertyChanging("TagName");
                _TagName = StructuralObject.SetValidValue(value, false, "TagName");
                ReportPropertyChanged("TagName");
                OnTagNameChanged();
            }
        }
        private global::System.String _TagName;
        partial void OnTagNameChanging(global::System.String value);
        partial void OnTagNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TicketId
        {
            get
            {
                return _TicketId;
            }
            set
            {
                OnTicketIdChanging(value);
                ReportPropertyChanging("TicketId");
                _TicketId = StructuralObject.SetValidValue(value, "TicketId");
                ReportPropertyChanged("TicketId");
                OnTicketIdChanged();
            }
        }
        private global::System.Int32 _TicketId;
        partial void OnTicketIdChanging(global::System.Int32 value);
        partial void OnTicketIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TicketDeskModel", "FK_TicketTags_Tickets", "Tickets")]
        public Ticket Ticket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("TicketDeskModel.FK_TicketTags_Tickets", "Tickets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("TicketDeskModel.FK_TicketTags_Tickets", "Tickets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ticket> TicketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("TicketDeskModel.FK_TicketTags_Tickets", "Tickets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ticket>("TicketDeskModel.FK_TicketTags_Tickets", "Tickets", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
